body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
	margin: 0;
	padding: 0;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

fieldset, img, abbr {
	border: 0;
}

address, caption, cite, code, dfn, em, strong, th, var {
	font-style: normal;
	font-weight: normal;
}

ul li {
	list-style: none;
}

caption, th {
	text-align: left;
}

h1, h2, h3, h4, h5, h6 {
	font-size: 100%;
	font-weight: normal;
}

sup {
	vertical-align: text-top;
}

sub {
	vertical-align: text-bottom;
}

input, textarea, select {
	font-family: inherit;
	font-size: inherit;
	font-weight: inherit;
}

legend {
	color: #000;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
	display: block;
}

img {
	max-width: 100%;
	height: auto;
}

.container {
	max-width: 1170px;
	padding-left: 30px;
	padding-right: 30px;
	margin: 0 auto;
}

@font-face {
	font-family: 'Open Sans';
	src: url('../fonts/os.eot');
	src: url('../fonts/os.eot?#iefix') format('embedded-opentype'), url('../fonts/os.woff') format('woff'), url('../fonts/os.ttf') format('truetype'), url('../fonts/os.svg#FontName') format('svg');
	font-style: normal;
	font-weight: normal;
}

@font-face {
	font-family: 'Bickham Script Three';
	src: url('../fonts/BickhamScriptThree.eot');
	src: url('../fonts/BickhamScriptThree.eot?#iefix') format('embedded-opentype'), url('../fonts/BickhamScriptThree.woff') format('woff'), url('../fonts/BickhamScriptThree.ttf') format('truetype'), url('../fonts/BickhamScriptThree.svg#FontName') format('svg');
	font-style: normal;
	font-weight: 600;
}

@font-face {
	font-family: 'Philosopher Bold';
	src: url('../fonts/Philosopher-Bold.eot');
	src: url('../fonts/Philosopher-Bold.eot?#iefix') format('embedded-opentype'), url('../fonts/Philosopher-Bold.woff') format('woff'), url('../fonts/Philosopher-Bold.ttf') format('truetype'), url('../fonts/Philosopher-Bold.svg#FontName') format('svg');
	font-style: normal;
	font-weight: normal;
}

@font-face {
	font-family: 'OpenSans Light';
	src: url('../fonts/OpenSans-Light.eot');
	src: url('../fonts/OpenSans-Light.eot?#iefix') format('embedded-opentype'), url('../fonts/OpenSans-Light.woff') format('woff'), url('../fonts/OpenSans-Light.ttf') format('truetype'), url('../fonts/OpenSans-Light.svg#FontName') format('svg');
	font-style: normal;
	font-weight: normal;
}

@font-face {
	font-family: 'Open Sans Bold';
	src: url('../fonts/osb.eot');
	src: url('../fonts/osb.eot?#iefix') format('embedded-opentype'), url('../fonts/osb.woff') format('woff'), url('../fonts/osb.ttf') format('truetype'), url('../fonts/osb.svg#FontName') format('svg');
	font-style: normal;
	font-weight: 700;
}

@font-face {
	font-family: 'Roboto Regular';
	src: url('../fonts/Roboto-Regular.eot');
	src: url('../fonts/Roboto-Regular.eot?#iefix') format('embedded-opentype'), url('../fonts/Roboto-Regular.woff') format('woff'), url('../fonts/Roboto-Regular.ttf') format('truetype'), url('../fonts/Roboto-Regular.svg#FontName') format('svg');
	font-style: normal;
	font-weight: 700;
}

::-webkit-input-placeholder {
	color: #a2a2a2;
	font-family: 'Open Sans';
	padding-left: 17px;
}

::-moz-placeholder {
	color: #a2a2a2;
	font-family: 'Open Sans';
	padding-left: 17px;
}

:-moz-placeholder {
	color: #a2a2a2;
	font-family: 'Open Sans';
	padding-left: 17px;
}

:-ms-input-placeholder {
	color: #a2a2a2;
	font-family: 'Open Sans';
	padding-left: 17px;
}

.head {
	position: relative;
	display: -webkit-box;
	display:    -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         box;
	display:         flex;
}

.head__vector {
	position: absolute;
	left: 0;
}

.head__img {
	position: absolute;
	right: 0;
	z-index: -1;
}

.head__box {
	margin: 0 auto;
}

.head__title {
	font-family: 'Bickham Script Three';
	color: #c6004a;
	text-align: center;
	font-size: 115px;
	margin-top: 75px;
}

.head__work {
	text-align: center;
	font-family: 'Open Sans';
	font-size: 18px;
	text-transform: uppercase;
	color: #3d3243;
	margin-top: -60px;
	margin-bottom: 10px;
}

.head__phone {
	text-align: center;
	font-family: 'Philosopher Bold';
	font-size: 22px;
	color: #ac0041;
	margin-bottom: 52px;
}

.menu {
	padding-bottom: 23px;
}

.menu__ul {
	display: -webkit-box;
	display:    -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         box;
	display:         flex;
	-webkit-box-orient: horizontal;
	   -moz-box-orient: horizontal;
	     -o-box-orient: horizontal;
	-webkit-flex-direction: row;
	    -ms-flex-direction: row;
	        flex-direction: row;
	text-align: center;
	-webkit-box-pack: justify;
	   -moz-box-pack: justify;
	     -o-box-pack: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-between;
	        justify-content: space-between;
}

.menu__li--left {
	margin-left: 186px;
}

.menu__a {
	font-size: 24px;
	text-transform: uppercase;
	color: #5f5059;
	font-family: 'Philosopher Bold';
}

.menu__a:hover {
	color: #c6004a;
	text-decoration: none;
}

.menu__social {
	background: url('../img/vk.png') 0 0 no-repeat;
	float: left;
	display: block;
	width: 37px;
	height: 37px;
	margin-right: 11px;
}

.menu__social:hover {
	background: url('../img/vk1.png') 0 0 no-repeat;
}

.menu__inst {
	background: url('../img/inst.png') 0 0 no-repeat;
	float: left;
	display: block;
	width: 37px;
	height: 37px;
}

.menu__inst:hover {
	background: url('../img/inst1.png') 0 0 no-repeat;
}

.menu__in {
	margin-bottom: 24px;
}

.menu__sub {
	display: -webkit-box;
	display:    -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         box;
	display:         flex;
	-webkit-box-pack: distribute;
	   -moz-box-pack: distribute;
	     -o-box-pack: distribute;
	-ms-flex-pack: distribute;
	-webkit-justify-content: space-around;
	        justify-content: space-around;
}

.menu__sub li {
	list-style-type: disc;
	color: #776e7d;
}

.menu__sub li:hover {
	color: #000;
}

.menu__makeup {
	color: #776e7d;
	font-family: 'Open Sans';
	font-size: 16px;
}

.menu__makeup:hover {
	color: #000;
	font-size: 14.5px;
	font-family: 'Open Sans Bold';
	text-decoration: none;
}

.bx-wrapper {
	border: 0px solid #fff;
}

.bx-wrapper .bx-pager {
	text-align: center;
	font-size: .85em;
	font-family: Arial;
	font-weight: bold;
	color: #9c364b;
	padding-top: 6px;
	margin-bottom: 12px;
}

.bx-wrapper .bx-pager, .bx-wrapper .bx-controls-auto {
	position: absolute;
	bottom: 25px;
	padding-bottom: 26px;
	left: 50%;
	padding-top: 6px;
	background: rgba(0,0,0,.6);
	width: 130px;
	border-radius: 10px;
	height: 33px;
}

.bx-wrapper .bx-pager.bx-default-pager a:hover, .bx-wrapper .bx-pager.bx-default-pager a.active, .bx-wrapper .bx-pager.bx-default-pager a:focus {
	background: #a94442;
}

.bx-wrapper .bx-pager.bx-default-pager a {
	background: #fff;
}

.slider__box {
	position: absolute;
	top: 30%;
}

.slider__title {
	font-family: 'Philosopher Bold';
	font-size: 42px;
	color: #fff;
	line-height: 1em;
	margin-bottom: 20px;
}

.slider__text {
	font-family: 'Open Sans';
	font-size: 18px;
	color: #b4b3b3;
}

.slider1 {
	width: 61.6%;
	float: left;
	margin-top: 21px;
}

.up {
	background: #fff url('../img/bg1.jpg') 0 0 no-repeat;
}

.makeup {
	margin-top: -20px;
}

.makeup .bx-wrapper .bx-pager, .makeup .bx-wrapper .bx-controls-auto {
	position: absolute;
	bottom: 25px;
	padding-bottom: 26px;
	left: 42%;
	padding-top: 6px;
	background: rgba(0,0,0,.6);
	width: 130px;
	border-radius: 10px;
	height: 33px;
}

.makeup__box {
	background: url('../img/img1.jpg') 0 0 no-repeat;
	padding-top: 15px;
	padding-bottom: 20px;
}

.makeup__title {
	text-align: center;
	font-family: 'Philosopher Bold';
	font-size: 30px;
	color: #fff;
}

.makeup__img {
	width: 35.8%;
	margin-left: 28px;
	margin-top: 21px;
}

.work__box {
	display: -webkit-box;
	display:    -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         box;
	display:         flex;
}

.work__title {
	font-family: 'Philosopher Bold';
	font-size: 30px;
	text-align: center;
	margin-bottom: 17px;
	margin-top: -37px;
}

.work__img {
	margin-right: 17px;
	height: 346px;
	position: relative;
}

.work__img--one {
	margin-right: 0;
}

.work__search {
	position: absolute;
	text-align: center;
	width: 276px;
	height: 346px;
	z-index: 999;
	margin-top: -345px;
}

.work__search--two:hover {
	width: 274px !important;
}

.work__search--three:hover {
	width: 229px !important;
}

.work__search:hover {
	position: absolute;
	text-align: center;
	display: block;
	margin-left: 0;
	padding-top: 141px;
	width: 276px;
	background-color: rgba(142,31,16,.4);
	margin-top: -345px;
	height: 346px;
	cursor: pointer;
}

.work__search img {
	display: none;
}

.work__search:hover img {
	display: block;
}

.work__look {
	position: absolute;
	width: 125px;
	top: 45%;
	left: 25%;
	height: 49px;
}

.work__look:hover {
	position: absolute;
	opacity: 1;
	-ms-filter: none;
	    filter: none;
}

.batn__all {
	display: block;
	background: #ac0041;
	border-radius: 10px;
	font-family: 'Open Sans';
	font-size: 18px;
	color: #fff;
	width: 289px;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
	margin: 31px auto 64px auto;
}

.batn__all:hover {
	color: #fff;
	text-decoration: none;
}

.batn__arrow {
	margin-left: 18px;
}

.work__hidden--one {
	margin-top: 31px;
	-webkit-box-ordinal-group: 0;
	   -moz-box-ordinal-group: 0;
	     -o-box-ordinal-group: 0;
	-ms-flex-order: 0;
	-webkit-order: 0;
	        order: 0;
	margin-bottom: 31px;
}

.work__hidden--two {
	margin-top: 31px;
	-webkit-box-ordinal-group: -1;
	   -moz-box-ordinal-group: -1;
	     -o-box-ordinal-group: -1;
	-ms-flex-order: -1;
	-webkit-order: -1;
	        order: -1;
	margin-bottom: 31px;
}

.work__hidden--three {
	margin-top: 31px;
	-webkit-box-ordinal-group: -2;
	   -moz-box-ordinal-group: -2;
	     -o-box-ordinal-group: -2;
	-ms-flex-order: -2;
	-webkit-order: -2;
	        order: -2;
	margin-bottom: 31px;
}

.work__hidden--four {
	margin-top: 31px;
	-webkit-box-ordinal-group: -3;
	   -moz-box-ordinal-group: -3;
	     -o-box-ordinal-group: -3;
	-ms-flex-order: -3;
	-webkit-order: -3;
	        order: -3;
	margin-bottom: 31px;
}

.visage {
	background-color: #f5f5f6;
	padding-top: 50px;
	padding-bottom: 39px;
}

.city {
	background: url('../img/vect2.jpg') 0 0 no-repeat;
	padding-top: 16px;
	padding-bottom: 16px;
}

.city .container {
	position: relative;
}

.city__title {
	font-family: 'Philosopher Bold';
	font-size: 30px;
	color: #fff;
}

.city__box {
	width: 700px;
	float: left;
}

.city__text {
	font-family: 'OpenSans Light';
	font-size: 14px;
	line-height: 1.9em;
	margin-top: 35px;
	margin-bottom: 20px;
}

.city__img {
	float: left;
	margin-right: 8px;
	padding-top: 3px;
}

.city__word {
	font-family: 'OpenSans Light';
	font-size: 14px;
	margin-bottom: 20px;
}

.city__item {
	margin-top: 20px;
	line-height: 1.9em;
	font-family: 'OpenSans Light';
	font-size: 14px;
}

.city__visage {
	position: absolute;
	margin-left: 35px;
	margin-top: -49px;
}

.bg {
	background: url('../img/work.jpg') 0 0 no-repeat;
	padding-top: 15px;
	padding-bottom: 15px;
	margin-bottom: 51px;
}

.cosmetics {
	padding-top: 50px;
}

.cosmetics__h2 {
	font-family: 'Philosopher Bold';
	font-size: 30px;
	color: #fff;
	text-align: center;
}

.women {
	display: -webkit-box;
	display:    -moz-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display:         box;
	display:         flex;
	-webkit-box-lines: single;
	   -moz-box-lines: single;
	     -o-box-lines: single;
	-webkit-flex-wrap: nowrap;
	    -ms-flex-wrap: nowrap;
	        flex-wrap: nowrap;
	overflow: hidden;
}

@media screen and (max-width: 1140px) {
	.container {
		padding-left: 20px;
		padding-right: 20px;
	}
}

@media screen and (max-width: 960px) {
	.container {
		padding-left: 10px;
		padding-right: 10px;
	}
}

@media screen and (max-width: 720px) {
	.container {
		padding-left: 5px;
		padding-right: 5px;
	}
}

@media screen and (max-width: 540px) {
	.container {
		padding-left: 5px;
		padding-right: 5px;
	}
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
